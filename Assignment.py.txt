'''Question 1'''
def convert(numberIs):
    ''' Creating list to store the rain drop '''
    factors =[] 
    ''' To concatenate the output else the letters of droup sound will be splitted  '''
    output =''
    ''' Set to store the drop sound  Chosen set so the element can't be modified '''
    tu = {1:'Pling',2:'plang',3:'Plong'}
    
    if numberIs % 3 == 0 or numberIs % 5 == 0 or numberIs % 7 == 0 :
        if (numberIs % 3 == 0):
            factors += tu[1]
        if (numberIs % 5 == 0):
          	factors += tu[2]
        if (numberIs % 7 == 0):
          	factors += tu[3]
        return output.join(factors)
    else:
    	return numberIs


'''Question 2'''
def sum_square_difference(n):
	numbers = range(1,n+1)
	sum_squares = sum(i**2 for i in numbers)
	square_sum = sum(numbers)**2
	return square_sum - sum_squares
	
print(sum_square_difference(5))


'''Question 3'''
def SieveOfEratosthenes(onIndex):
     
    n = 1000005
    # Create a boolean array "prime[0..n]" and
    # initialize all entries it as true. A value
    # in prime[i] will finally be false if i is
    # Not a prime, else true.
    prime = [True for i in range(n + 1)]
     
    p = 2
    while (p * p <= n):
           
        # If prime[p] is not changed,
        # then it is a prime
        if (prime[p] == True):
               
            # Update all multiples of p
            for i in range(p * p, n + 1, p):
                prime[i] = False
                 
        p += 1
       
    # Print all prime numbers
    for p in range(2, n + 1):
        if prime[p]:
            primes.append(p)

    print(primes[(onIndex-1)])


'''Question 4'''
def calculate_sum(a, N):
 
    # Number of multiples
    m = N / a
 
    # sum of first m natural numbers
    sum = m * (m + 1) / 2
 
    # sum of multiples
    ans = a * sum
 
    print("Sum of multiples of ", a,
          " up to ", N, " = ", ans)
 
# Driver Code
calculate_sum(7, 49)


'''Question 5'''
def flat(lis):
    flatList = []
    # Iterate with outer list
    for element in lis:
        if type(element) is list:
            # Check if type is list than iterate through the sublist
            for item in element:
                flatList.append(item)
        else:
            flatList.append(element)
    return flatList
 
 
lis = [[11, 22, 33, 44], [55, 66, 77], [88, 99, 100]]
print('List', lis)
print('Flat List', flat(lis))
